{"ast":null,"code":"var _jsxFileName = \"/Users/melissanock/hacktober-pumpkin-patch/src/components/Patch/Patch.jsx\";\nimport React from 'react';\nimport './Patch.css';\nimport PatchRow from \"../PatchRow/PatchRow\";\nimport pumpkinRows from '../pumpkinRows.js';\nconst ROW_HEIGHT = 130;\n\nclass Patch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numberOfRowsToDisplay: Math.floor((window.innerHeight - 100) / ROW_HEIGHT),\n      carouselUp: false,\n      carouselDown: true,\n      carouselDistance: 0\n    };\n\n    this.keyUpHandler = evt => {\n      console.log(evt.key);\n\n      if (evt.key === 'ArrowDown') {\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        if (this.state.carouselDistance + this.state.numberOfRowsToDisplay >= pumpkinRows.length + 1) {\n          this.handleCarouselDown();\n        }\n      } else if (evt.key === 'ArrowUp' && this.state.carouselDistance) {\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        if (this.state.carouselDistance) {\n          this.handleCarouselUp();\n        }\n      }\n    };\n\n    this.updateCarouselLocation = (prevState, distance) => {\n      this.setState({\n        carouselDistance: prevState.carouselDistance + distance,\n        carouselUp: prevState.carouselDistance + distance > 0\n      });\n    };\n\n    this.handleCarouselDown = () => {\n      if (this.state.carouselDistance + this.state.numberOfRowsToDisplay < pumpkinRows.length + 1) {\n        this.setState(prevState => {\n          return {\n            carouselUp: true,\n            carouselDown: prevState.carouselDistance + prevState.numberOfRowsToDisplay !== pumpkinRows.length,\n            carouselDistance: prevState.carouselDistance + 1\n          };\n        });\n        return;\n      }\n\n      this.setState({\n        carouselDown: false\n      });\n    };\n\n    this.handleCarouselUp = () => {\n      if (this.state.carouselDistance) {\n        this.setState(prevState => {\n          return {\n            carouselUp: prevState.carouselDistance > 1,\n            carouselDown: true,\n            carouselDistance: prevState.carouselDistance - 1\n          };\n        });\n        return;\n      }\n\n      this.setState({\n        carouselUp: false,\n        carouselDown: true\n      });\n    };\n  }\n\n  /**\n   * Add event listener for window resize and carousel\n   */\n  componentDidMount() {\n    this.updateDimensions();\n    this.onWindowResizing = this.updateDimensions.bind(this);\n    window.addEventListener('resize', this.onWindowResizing);\n    document.addEventListener('keyup', this.keyUpHandler);\n  }\n  /**\n   * Remove event listener for window resize\n   */\n\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResizing);\n    document.removeEventListener('keyup', this.keyUpHandler);\n  }\n\n  updateDimensions() {\n    const numberOfRowsToDisplay = Math.floor((window.innerHeight - 100) / ROW_HEIGHT);\n    this.setState(prevState => {\n      let carouselDown = prevState.carouselDown;\n\n      if (prevState.numberOfRowsToDisplay < numberOfRowsToDisplay) {\n        carouselDown = pumpkinRows.length + 1 > prevState.carouselDistance + numberOfRowsToDisplay;\n      }\n\n      return {\n        numberOfRowsToDisplay,\n        carouselDown\n      };\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          carouselDistance = _this$state.carouselDistance,\n          numberOfRowsToDisplay = _this$state.numberOfRowsToDisplay,\n          carouselDown = _this$state.carouselDown,\n          carouselUp = _this$state.carouselUp;\n    console.log(carouselDistance);\n    const PatchRows = pumpkinRows.slice(carouselDistance, numberOfRowsToDisplay + carouselDistance).map(row => React.createElement(PatchRow, {\n      pumpkins: row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"patch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, PatchRows, carouselDown);\n  }\n\n}\n\nexport default Patch;","map":{"version":3,"sources":["/Users/melissanock/hacktober-pumpkin-patch/src/components/Patch/Patch.jsx"],"names":["React","PatchRow","pumpkinRows","ROW_HEIGHT","Patch","Component","state","numberOfRowsToDisplay","Math","floor","window","innerHeight","carouselUp","carouselDown","carouselDistance","keyUpHandler","evt","console","log","key","preventDefault","stopPropagation","length","handleCarouselDown","handleCarouselUp","updateCarouselLocation","prevState","distance","setState","componentDidMount","updateDimensions","onWindowResizing","bind","addEventListener","document","componentWillUnmount","removeEventListener","render","PatchRows","slice","map","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,MAAMC,UAAU,GAAG,GAAnB;;AACA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,qBAAqB,EAAEC,IAAI,CAACC,KAAL,CAAW,CAACC,MAAM,CAACC,WAAP,GAAqB,GAAtB,IAA6BR,UAAxC,CADjB;AAENS,MAAAA,UAAU,EAAE,KAFN;AAGNC,MAAAA,YAAY,EAAE,IAHR;AAINC,MAAAA,gBAAgB,EAAE;AAJZ,KAD0B;;AAAA,SA2ClCC,YA3CkC,GA2CnBC,GAAG,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,GAAhB;;AACA,UAAIH,GAAG,CAACG,GAAJ,KAAY,WAAhB,EAA6B;AAC3BH,QAAAA,GAAG,CAACI,cAAJ;AACAJ,QAAAA,GAAG,CAACK,eAAJ;;AACA,YAAK,KAAKf,KAAL,CAAWQ,gBAAX,GAA8B,KAAKR,KAAL,CAAWC,qBAA1C,IACDL,WAAW,CAACoB,MAAZ,GAAqB,CADxB,EAC4B;AAC1B,eAAKC,kBAAL;AACD;AACF,OAPD,MAOO,IAAIP,GAAG,CAACG,GAAJ,KAAY,SAAZ,IAAyB,KAAKb,KAAL,CAAWQ,gBAAxC,EAA0D;AAC/DE,QAAAA,GAAG,CAACI,cAAJ;AACAJ,QAAAA,GAAG,CAACK,eAAJ;;AACA,YAAI,KAAKf,KAAL,CAAWQ,gBAAf,EAAiC;AAC/B,eAAKU,gBAAL;AACD;AACF;AACF,KA3DiC;;AAAA,SA6DlCC,sBA7DkC,GA6DT,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAChD,WAAKC,QAAL,CAAc;AACZd,QAAAA,gBAAgB,EAAEY,SAAS,CAACZ,gBAAV,GAA6Ba,QADnC;AAEZf,QAAAA,UAAU,EAAGc,SAAS,CAACZ,gBAAV,GAA6Ba,QAA9B,GAA0C;AAF1C,OAAd;AAID,KAlEiC;;AAAA,SAoElCJ,kBApEkC,GAoEb,MAAM;AACzB,UAAK,KAAKjB,KAAL,CAAWQ,gBAAX,GAA8B,KAAKR,KAAL,CAAWC,qBAA1C,GAAoEL,WAAW,CAACoB,MAAZ,GAAqB,CAA7F,EAAiG;AAC/F,aAAKM,QAAL,CAAcF,SAAS,IAAI;AACzB,iBAAO;AACLd,YAAAA,UAAU,EAAE,IADP;AAELC,YAAAA,YAAY,EAAGa,SAAS,CAACZ,gBAAV,GAA6BY,SAAS,CAACnB,qBAAxC,KACXL,WAAW,CAACoB,MAHV;AAILR,YAAAA,gBAAgB,EAAEY,SAAS,CAACZ,gBAAV,GAA6B;AAJ1C,WAAP;AAMD,SAPD;AAQA;AACD;;AAED,WAAKc,QAAL,CAAc;AACZf,QAAAA,YAAY,EAAE;AADF,OAAd;AAGD,KApFiC;;AAAA,SAsFlCW,gBAtFkC,GAsFf,MAAM;AACvB,UAAI,KAAKlB,KAAL,CAAWQ,gBAAf,EAAiC;AAC/B,aAAKc,QAAL,CAAcF,SAAS,IAAI;AACzB,iBAAO;AACLd,YAAAA,UAAU,EAAEc,SAAS,CAACZ,gBAAV,GAA6B,CADpC;AAELD,YAAAA,YAAY,EAAE,IAFT;AAGLC,YAAAA,gBAAgB,EAAEY,SAAS,CAACZ,gBAAV,GAA6B;AAH1C,WAAP;AAKD,SAND;AAOA;AACD;;AAED,WAAKc,QAAL,CAAc;AACZhB,QAAAA,UAAU,EAAE,KADA;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KAtGiC;AAAA;;AAQlC;;;AAGAgB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL;AACA,SAAKC,gBAAL,GAAwB,KAAKD,gBAAL,CAAsBE,IAAtB,CAA2B,IAA3B,CAAxB;AACAtB,IAAAA,MAAM,CAACuB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,gBAAvC;AACAG,IAAAA,QAAQ,CAACD,gBAAT,CAA0B,OAA1B,EAAmC,KAAKlB,YAAxC;AACD;AAED;;;;;AAGAoB,EAAAA,oBAAoB,GAAG;AACrBzB,IAAAA,MAAM,CAAC0B,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,gBAA1C;AACAG,IAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKrB,YAA3C;AACD;;AAEDe,EAAAA,gBAAgB,GAAG;AACjB,UAAMvB,qBAAqB,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACC,MAAM,CAACC,WAAP,GAAqB,GAAtB,IAA6BR,UAAxC,CAA9B;AAEA,SAAKyB,QAAL,CAAcF,SAAS,IAAI;AAAA,UACpBb,YADoB,GACJa,SADI,CACpBb,YADoB;;AAEzB,UAAIa,SAAS,CAACnB,qBAAV,GAAkCA,qBAAtC,EAA6D;AAC3DM,QAAAA,YAAY,GAAIX,WAAW,CAACoB,MAAZ,GAAqB,CAAtB,GACZI,SAAS,CAACZ,gBAAV,GAA6BP,qBADhC;AAED;;AAED,aAAO;AACLA,QAAAA,qBADK;AAELM,QAAAA;AAFK,OAAP;AAID,KAXD;AAYD;;AA+DDwB,EAAAA,MAAM,GAAG;AAAA,wBACqE,KAAK/B,KAD1E;AAAA,UACAQ,gBADA,eACAA,gBADA;AAAA,UACkBP,qBADlB,eACkBA,qBADlB;AAAA,UACyCM,YADzC,eACyCA,YADzC;AAAA,UACuDD,UADvD,eACuDA,UADvD;AAEPK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,gBAAZ;AACA,UAAMwB,SAAS,GAAGpC,WAAW,CAACqC,KAAZ,CAAkBzB,gBAAlB,EAAoCP,qBAAqB,GAAGO,gBAA5D,EACf0B,GADe,CACXC,GAAG,IAAI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEA,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAAlB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,SADH,EAEGzB,YAFH,CADF;AAMD;;AAnHiC;;AAsHpC,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport './Patch.css';\nimport PatchRow from \"../PatchRow/PatchRow\";\nimport pumpkinRows from '../pumpkinRows.js';\n\nconst ROW_HEIGHT = 130;\nclass Patch extends React.Component {\n  state = {\n    numberOfRowsToDisplay: Math.floor((window.innerHeight - 100) / ROW_HEIGHT),\n    carouselUp: false,\n    carouselDown: true,\n    carouselDistance: 0,\n  };\n\n  /**\n   * Add event listener for window resize and carousel\n   */\n  componentDidMount() {\n    this.updateDimensions();\n    this.onWindowResizing = this.updateDimensions.bind(this);\n    window.addEventListener('resize', this.onWindowResizing);\n    document.addEventListener('keyup', this.keyUpHandler);\n  }\n\n  /**\n   * Remove event listener for window resize\n   */\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onWindowResizing);\n    document.removeEventListener('keyup', this.keyUpHandler);\n  }\n\n  updateDimensions() {\n    const numberOfRowsToDisplay = Math.floor((window.innerHeight - 100) / ROW_HEIGHT);\n\n    this.setState(prevState => {\n      let {carouselDown} = prevState;\n      if (prevState.numberOfRowsToDisplay < numberOfRowsToDisplay) {\n        carouselDown = (pumpkinRows.length + 1) >\n          (prevState.carouselDistance + numberOfRowsToDisplay);\n      }\n\n      return {\n        numberOfRowsToDisplay,\n        carouselDown\n      };\n    });\n  }\n\n  keyUpHandler = evt => {\n    console.log(evt.key);\n    if (evt.key === 'ArrowDown') {\n      evt.preventDefault();\n      evt.stopPropagation();\n      if ((this.state.carouselDistance + this.state.numberOfRowsToDisplay) >=\n        (pumpkinRows.length + 1)) {\n        this.handleCarouselDown();\n      }\n    } else if (evt.key === 'ArrowUp' && this.state.carouselDistance) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      if (this.state.carouselDistance) {\n        this.handleCarouselUp();\n      }\n    }\n  };\n\n  updateCarouselLocation = (prevState, distance) => {\n    this.setState({\n      carouselDistance: prevState.carouselDistance + distance,\n      carouselUp: (prevState.carouselDistance + distance) > 0\n    });\n  };\n\n  handleCarouselDown = () => {\n    if ((this.state.carouselDistance + this.state.numberOfRowsToDisplay) < (pumpkinRows.length + 1)) {\n      this.setState(prevState => {\n        return {\n          carouselUp: true,\n          carouselDown: (prevState.carouselDistance + prevState.numberOfRowsToDisplay) !==\n            (pumpkinRows.length),\n          carouselDistance: prevState.carouselDistance + 1\n        };\n      });\n      return;\n    }\n\n    this.setState({\n      carouselDown: false\n    });\n  };\n\n  handleCarouselUp = () => {\n    if (this.state.carouselDistance) {\n      this.setState(prevState => {\n        return {\n          carouselUp: prevState.carouselDistance > 1,\n          carouselDown: true,\n          carouselDistance: prevState.carouselDistance - 1\n        };\n      });\n      return;\n    }\n\n    this.setState({\n      carouselUp: false,\n      carouselDown: true\n    });\n  };\n\n  render() {\n    const {carouselDistance, numberOfRowsToDisplay, carouselDown, carouselUp} = this.state;\n    console.log(carouselDistance);\n    const PatchRows = pumpkinRows.slice(carouselDistance, numberOfRowsToDisplay + carouselDistance)\n      .map(row => <PatchRow pumpkins={row}/>);\n    return (\n      <div className=\"patch\">\n        {PatchRows}\n        {carouselDown}\n      </div>\n    );\n  }\n}\n\nexport default Patch;\n"]},"metadata":{},"sourceType":"module"}